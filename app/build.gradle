apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.android.march.one11"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'com.codearms.maoqiqi:lib-android:1.0.2'
    implementation 'com.codearms.maoqiqi:lib-databinding:1.0.0'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.palette:palette:1.0.0'

    // 注解
    implementation "com.jakewharton:butterknife:$rootProject.ext.butterknifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$rootProject.ext.butterknifeVersion"

    // 网络
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttpVersion"

    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"

    // Json 数据解析
    implementation "com.google.code.gson:gson:$rootProject.ext.gsonVersion"

    implementation "io.reactivex:rxjava:$rootProject.ext.rxjavaVersion"
    implementation "io.reactivex:rxandroid:$rootProject.rxandroidVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava:$rootProject.ext.retrofitVersion"

    // 图片加载框架
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"

    // Banner
    implementation "com.youth.banner:banner:$rootProject.ext.bannerVersion"

    implementation 'com.github.GrenderG:Toasty:1.2.8'
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'

    // 测试
    testImplementation "junit:junit:$rootProject.ext.junitVersion"

    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    implementation "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.ext.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.ext.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.ext.daggerVersion"

    implementation 'com.google.android:flexbox:0.3.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

android.applicationVariants.all { variant ->
    def defaultVersionName = 'v' + android.defaultConfig.versionName
    def versionName = 'v' + variant.getVersionName()
    def buildTypeName = variant.buildType.name
    def name = variant.name

    println "---------------------------------------------------------------------------------------------------------------------------------"
    println "defaultVersionName： " + defaultVersionName
    println "versionName： " + versionName
    println "buildTypeName： " + buildTypeName
    println "name:" + name

    variant.productFlavors.each { product ->
        println "productName： " + product.name
    }

    variant.outputs.each { output ->
        def time = new Date().format('yyyyMMddHHmmss', TimeZone.getTimeZone("UTC"))
        output.outputFileName = "one-${buildTypeName}-${versionName}-${time}.apk"
        println "输出文件位置：" + output.outputFileName
    }
}